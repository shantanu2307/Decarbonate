{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Daily.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from './../../firebase/auth';\nimport axios from 'axios';\nimport { Chart } from 'react-google-charts';\nexport default function Daily() {\n  _s();\n\n  const [chartData, setChartData] = useState([['Day', 'Carbon emission in kgs']]);\n  const {\n    currentUser\n  } = useAuth();\n  useEffect(() => {\n    if (currentUser && currentUser.uid) {\n      let data = {\n        uid: currentUser.uid\n      };\n      axios.post('http://localhost:8080/getdaily', data).then(response => {\n        var graphdata = [['Month', 'Carbon emission in kgs']];\n        const names = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n        for (var i = 1; i <= 12; i++) {\n          graphdata.push([names[i], 0]);\n        }\n\n        console.log(response.data);\n\n        for (var i of response.data) {\n          graphdata[i.date][1] += i.total;\n        }\n\n        console.log(graphdata);\n        setChartData(graphdata);\n      }).catch(err => console.log('error --> ', err));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      maxWidth: 900\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      width: '800px',\n      height: '400px',\n      chartType: \"LineChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this),\n      data: chartData,\n      options: {\n        hAxis: {\n          title: 'Day'\n        },\n        vAxis: {\n          title: 'Carbon Emission in kgs'\n        }\n      },\n      rootProps: {\n        'data-testid': '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Daily, \"t7h9nGcW4iHeRt9hm8yVcQz6Epw=\", false, function () {\n  return [useAuth];\n});\n\n_c = Daily;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"sources":["/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Daily.js"],"names":["React","useEffect","useState","useAuth","axios","Chart","Daily","chartData","setChartData","currentUser","uid","data","post","then","response","graphdata","names","i","push","console","log","date","total","catch","err","display","maxWidth","hAxis","title","vAxis"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,qBAApB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAC,CAAC,KAAD,EAAQ,wBAAR,CAAD,CAAD,CAA1C;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAkBN,OAAO,EAA/B;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,WAAW,IAAIA,WAAW,CAACC,GAA/B,EAAoC;AAChC,UAAIC,IAAI,GAAG;AAACD,QAAAA,GAAG,EAAED,WAAW,CAACC;AAAlB,OAAX;AACAN,MAAAA,KAAK,CAACQ,IAAN,CAAW,gCAAX,EAA6CD,IAA7C,EACKE,IADL,CACUC,QAAQ,IAAI;AACd,YAAIC,SAAS,GAAG,CAAC,CAAC,OAAD,EAAU,wBAAV,CAAD,CAAhB;AACA,cAAMC,KAAK,GAAG,CAAC,EAAD,EAAK,SAAL,EAAgB,UAAhB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,KAA9C,EAAqD,MAArD,EAA6D,MAA7D,EAAqE,QAArE,EAA+E,WAA/E,EAA4F,SAA5F,EAAuG,UAAvG,EAAmH,UAAnH,CAAd;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BF,UAAAA,SAAS,CAACG,IAAV,CAAe,CAACF,KAAK,CAACC,CAAD,CAAN,EAAW,CAAX,CAAf;AACH;;AACDE,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACH,IAArB;;AACA,aAAK,IAAIM,CAAT,IAAcH,QAAQ,CAACH,IAAvB,EAA6B;AACzBI,UAAAA,SAAS,CAACE,CAAC,CAACI,IAAH,CAAT,CAAkB,CAAlB,KAAwBJ,CAAC,CAACK,KAA1B;AACH;;AACDH,QAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACAP,QAAAA,YAAY,CAACO,SAAD,CAAZ;AACH,OAbL,EAcKQ,KAdL,CAcWC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BI,GAA1B,CAdlB;AAeH;AACJ,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA,2BAEA,QAAC,KAAD;AACA,MAAA,KAAK,EAAE,OADP;AAEA,MAAA,MAAM,EAAE,OAFR;AAGA,MAAA,SAAS,EAAC,WAHV;AAIA,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR;AAKA,MAAA,IAAI,EAAEnB,SALN;AAMA,MAAA,OAAO,EAAE;AACLoB,QAAAA,KAAK,EAAE;AACPC,UAAAA,KAAK,EAAE;AADA,SADF;AAILC,QAAAA,KAAK,EAAE;AACPD,UAAAA,KAAK,EAAE;AADA;AAJF,OANT;AAcA,MAAA,SAAS,EAAE;AAAE,uBAAe;AAAjB;AAdX;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAjDuBtB,K;UAIIH,O;;;KAJJG,K;AAiDvB","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useAuth} from './../../firebase/auth';\nimport axios from 'axios';\nimport {Chart} from 'react-google-charts';\n\nexport default function Daily() {\n    \n    const [chartData, setChartData] = useState([['Day', 'Carbon emission in kgs']]);\n\n    const { currentUser } = useAuth();\n\n   \n    useEffect(() => {\n        if (currentUser && currentUser.uid) {\n            let data = {uid: currentUser.uid};\n            axios.post('http://localhost:8080/getdaily', data)\n                .then(response => {\n                    var graphdata = [['Month', 'Carbon emission in kgs']];\n                    const names = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n                    for (var i = 1; i <= 12; i++) {\n                        graphdata.push([names[i], 0]);\n                    }\n                    console.log(response.data);\n                    for (var i of response.data) {\n                        graphdata[i.date][1] += i.total;\n                    }\n                    console.log(graphdata);\n                    setChartData(graphdata);\n                })\n                .catch(err => console.log('error --> ', err));\n        }\n    }, []);\n\n    return (\n        <div style={{ display: 'flex', maxWidth: 900 }}>\n        \n        <Chart\n        width={'800px'}\n        height={'400px'}\n        chartType=\"LineChart\"\n        loader={<div>Loading Chart</div>}\n        data={chartData}\n        options={{\n            hAxis: {\n            title: 'Day',\n            },\n            vAxis: {\n            title: 'Carbon Emission in kgs',\n            },\n        }}\n        rootProps={{ 'data-testid': '1' }}\n        />\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}