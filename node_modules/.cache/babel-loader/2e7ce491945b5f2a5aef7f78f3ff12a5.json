{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Monthly.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from './../../firebase/auth';\nimport axios from 'axios';\nimport { Chart } from 'react-google-charts';\nexport default function Monthly() {\n  _s();\n\n  // const [flightTime, setFlightTime] = useState(0);\n  // const [flightEm, setFlightEm] = useState(0);\n  // const [electricity, setElectricity] = useState(0);\n  // const [peopleCount, setPeopleCount] = useState(1);\n  // const [elecEm, setElecEm] = useState(0);\n  // function setVal(callback, val) {\n  //     callback(Number(val));\n  // }\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const {\n    currentUser\n  } = useAuth();\n  useEffect(() => {\n    if (currentUser && currentUser.uid) {\n      setIsLoggedIn(true);\n    }\n  }, []); // useEffect(() => {\n  //     setFlightEm(90 * flightTime);\n  // }, [flightTime]);\n  // useEffect(() => {\n  //     setElecEm((0.9 * electricity) / peopleCount);\n  // }, [electricity, peopleCount]);\n  // function saveEm() {\n  //     let data = {\n  //         uid: currentUser.uid,\n  //         flights: flightEm,\n  //         electricity: elecEm,\n  //         total: (Number(flightEm) + Number(elecEm))\n  //     };\n  //     axios.post('http://localhost:8080/monthly', data)\n  //         .then(response => console.log(response))\n  //         .catch(err => console.log('error --> ', err));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      maxWidth: 1200\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      width: 1000,\n      height: 450,\n      chartType: \"ColumnChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this),\n      data: [['Month', 'Carbon emission in kgs'], ['January', 8175000], ['February', 3792000], ['March', 2695000], ['April', 2099000], ['May', 1526000], ['June', 1526000], ['July', 1526000], ['August', 1526000], ['September', 1526000], ['October', 1526000], ['November', 1526000], ['December', 1526000]],\n      options: {\n        title: 'Monhtly Carbon Emission',\n        chartArea: {\n          width: '70%'\n        },\n        hAxis: {\n          title: 'Month',\n          minValue: 0\n        },\n        vAxis: {\n          title: 'Carbon Emission in kgs'\n        }\n      },\n      legendToggle: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Monthly, \"b5KlrRO36X4Qlx4J5YpmFSNsH5c=\", false, function () {\n  return [useAuth];\n});\n\n_c = Monthly;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Monthly\");","map":{"version":3,"sources":["/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Monthly.js"],"names":["React","useEffect","useState","useAuth","axios","Chart","Monthly","isLoggedIn","setIsLoggedIn","currentUser","uid","display","maxWidth","title","chartArea","width","hAxis","minValue","vAxis"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,qBAApB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAkBN,OAAO,EAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,WAAW,IAAIA,WAAW,CAACC,GAA/B,EAAoC;AAChCF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT,CAf8B,CAqB9B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA,2BACI,QAAC,KAAD;AACI,MAAA,KAAK,EAAE,IADX;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,SAAS,EAAC,aAHd;AAII,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJZ;AAKI,MAAA,IAAI,EAAE,CACN,CAAC,OAAD,EAAU,wBAAV,CADM,EAEN,CAAC,SAAD,EAAY,OAAZ,CAFM,EAGN,CAAC,UAAD,EAAa,OAAb,CAHM,EAIN,CAAC,OAAD,EAAU,OAAV,CAJM,EAKN,CAAC,OAAD,EAAU,OAAV,CALM,EAMN,CAAC,KAAD,EAAQ,OAAR,CANM,EAON,CAAC,MAAD,EAAS,OAAT,CAPM,EAQN,CAAC,MAAD,EAAS,OAAT,CARM,EASN,CAAC,QAAD,EAAW,OAAX,CATM,EAUN,CAAC,WAAD,EAAc,OAAd,CAVM,EAWN,CAAC,SAAD,EAAY,OAAZ,CAXM,EAYN,CAAC,UAAD,EAAa,OAAb,CAZM,EAaN,CAAC,UAAD,EAAa,OAAb,CAbM,CALV;AAoBI,MAAA,OAAO,EAAE;AACTC,QAAAA,KAAK,EAAE,yBADE;AAETC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFF;AAGTC,QAAAA,KAAK,EAAE;AACHH,UAAAA,KAAK,EAAE,OADJ;AAEHI,UAAAA,QAAQ,EAAE;AAFP,SAHE;AAOTC,QAAAA,KAAK,EAAE;AACHL,UAAAA,KAAK,EAAE;AADJ;AAPE,OApBb;AA+BI,MAAA,YAAY;AA/BhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GA/EuBP,O;UAaIH,O;;;KAbJG,O;AA+EvB","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useAuth} from './../../firebase/auth';\nimport axios from 'axios';\nimport {Chart} from 'react-google-charts';\n\nexport default function Monthly() {\n    // const [flightTime, setFlightTime] = useState(0);\n    // const [flightEm, setFlightEm] = useState(0);\n\n    // const [electricity, setElectricity] = useState(0);\n    // const [peopleCount, setPeopleCount] = useState(1);\n    // const [elecEm, setElecEm] = useState(0);\n\n    // function setVal(callback, val) {\n    //     callback(Number(val));\n    // }\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const { currentUser } = useAuth();\n\n    useEffect(() => {\n        if (currentUser && currentUser.uid) {\n            setIsLoggedIn(true);\n        }\n    }, []);\n\n    // useEffect(() => {\n    //     setFlightEm(90 * flightTime);\n    // }, [flightTime]);\n\n    // useEffect(() => {\n    //     setElecEm((0.9 * electricity) / peopleCount);\n    // }, [electricity, peopleCount]);\n\n    // function saveEm() {\n    //     let data = {\n    //         uid: currentUser.uid,\n    //         flights: flightEm,\n    //         electricity: elecEm,\n    //         total: (Number(flightEm) + Number(elecEm))\n    //     };\n    //     axios.post('http://localhost:8080/monthly', data)\n    //         .then(response => console.log(response))\n    //         .catch(err => console.log('error --> ', err));\n    // }\n\n    return (\n        <div style={{ display: 'flex', maxWidth: 1200 }}>\n            <Chart\n                width={1000}\n                height={450}\n                chartType=\"ColumnChart\"\n                loader={<div>Loading Chart</div>}\n                data={[\n                ['Month', 'Carbon emission in kgs'],\n                ['January', 8175000],\n                ['February', 3792000],\n                ['March', 2695000],\n                ['April', 2099000],\n                ['May', 1526000],\n                ['June', 1526000],\n                ['July', 1526000],\n                ['August', 1526000],\n                ['September', 1526000],\n                ['October', 1526000],\n                ['November', 1526000],\n                ['December', 1526000],\n                ]}\n                options={{\n                title: 'Monhtly Carbon Emission',\n                chartArea: { width: '70%' },\n                hAxis: {\n                    title: 'Month',\n                    minValue: 0,\n                },\n                vAxis: {\n                    title: 'Carbon Emission in kgs',\n                },\n                }}\n                legendToggle\n            />\n            \n            </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}