{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Monthly.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from './../../firebase/auth';\nimport axios from 'axios';\nimport { Chart } from 'react-google-charts';\nexport default function Monthly() {\n  _s();\n\n  const [chartData, setChartData] = useState([['Month', 'Carbon emission in kgs']]);\n  const {\n    currentUser\n  } = useAuth();\n  useEffect(() => {\n    if (currentUser && currentUser.uid) {\n      let data = {\n        uid: currentUser.uid\n      };\n      axios.post('http://localhost:8080/getmonthly', data).then(response => {\n        function compare(a, b) {\n          if (a[0] < b[0]) {\n            return -1;\n          }\n\n          if (a[0] > b[0]) {\n            return 1;\n          }\n\n          return 0;\n        }\n\n        var graphdata = [];\n\n        for (var i = 1; i <= 12; i++) {\n          graphdata.push([i, 0]);\n        }\n\n        console.log(response.data);\n\n        for (var i of response.data) {\n          graphdata[i.date - 1][1] += i.total;\n        }\n\n        console.log(graphdata); // graphdata.sort(compare);\n\n        graphdata.unshift(['Month', 'Carbon emission in kgs']);\n        setChartData(graphdata);\n      }).catch(err => console.log('error --> ', err));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      maxWidth: 1200\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      width: 1000,\n      height: 450,\n      chartType: \"ColumnChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this),\n      data: chartData,\n      options: {\n        title: 'Monhtly Carbon Emission',\n        chartArea: {\n          width: '70%'\n        },\n        hAxis: {\n          title: 'Month',\n          minValue: 0\n        },\n        vAxis: {\n          title: 'Carbon Emission in kgs'\n        }\n      },\n      legendToggle: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Monthly, \"f3V0VfecIacVCmGElmItW1kWOak=\", false, function () {\n  return [useAuth];\n});\n\n_c = Monthly;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Monthly\");","map":{"version":3,"sources":["/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Monthly.js"],"names":["React","useEffect","useState","useAuth","axios","Chart","Monthly","chartData","setChartData","currentUser","uid","data","post","then","response","compare","a","b","graphdata","i","push","console","log","date","total","unshift","catch","err","display","maxWidth","title","chartArea","width","hAxis","minValue","vAxis"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useAuth} from './../../firebase/auth';\nimport axios from 'axios';\nimport {Chart} from 'react-google-charts';\n\nexport default function Monthly() {\n    \n    const [chartData, setChartData] = useState([['Month', 'Carbon emission in kgs']]);\n\n    const { currentUser } = useAuth();\n\n   \n    useEffect(() => {\n        if (currentUser && currentUser.uid) {\n            let data = {uid: currentUser.uid};\n            axios.post('http://localhost:8080/getmonthly', data)\n                .then(response => {\n                    function compare(a, b) {\n                        if (a[0] < b[0]) {\n                          return -1;\n                        }\n                        if (a[0] > b[0]) {\n                          return 1;\n                        }\n                        return 0;\n                    }\n                    var graphdata = [];\n                    for (var i = 1; i <= 12; i++) {\n                        graphdata.push([i, 0]);\n                    }\n                    console.log(response.data);\n                    for (var i of response.data) {\n                        graphdata[i.date-1][1] += i.total;\n                    }\n                    console.log(graphdata);\n                    // graphdata.sort(compare);\n                    graphdata.unshift(['Month', 'Carbon emission in kgs']);\n                    setChartData(graphdata);\n                })\n                .catch(err => console.log('error --> ', err));\n        }\n    }, []);\n\n    return (\n        <div style={{ display: 'flex', maxWidth: 1200 }}>\n            <Chart\n                width={1000}\n                height={450}\n                chartType=\"ColumnChart\"\n                loader={<div>Loading Chart</div>}\n                data={chartData}\n                options={{\n                title: 'Monhtly Carbon Emission',\n                chartArea: { width: '70%' },\n                hAxis: {\n                    title: 'Month',\n                    minValue: 0,\n                },\n                vAxis: {\n                    title: 'Carbon Emission in kgs',\n                },\n                }}\n                legendToggle\n            />\n            \n            </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}