{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Daily.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from './../../firebase/auth';\nimport axios from 'axios';\nimport { Chart } from 'react-google-charts';\nexport default function Daily() {\n  _s();\n\n  const [chartData, setChartData] = useState([['Day', 'Carbon emission in kgs']]);\n  const {\n    currentUser\n  } = useAuth();\n\n  if (currentUser && currentUser.uid) {\n    let data = {\n      uid: currentUser.uid\n    };\n    axios.post('http://localhost:8080/daily', data).then(response => {\n      var graphdata = [];\n      console.log(response.data);\n\n      for (var i of response.data) {\n        graphdata.push([i.date, i.total]);\n      }\n\n      console.log(graphdata);\n      graphdata.push([1, 10]);\n      graphdata.push([30, 15]);\n      graphdata = [['Day', 'Carbon emission in kgs']] + graphdata;\n      setChartData(graphdata);\n    }).catch(err => console.log('error --> ', err));\n  } // useEffect(() => {\n  //     setFlightEm(90 * flightTime);\n  // }, [flightTime]);\n  // useEffect(() => {\n  //     setElecEm((0.9 * electricity) / peopleCount);\n  // }, [electricity, peopleCount]);\n  // function saveEm() {\n  //     let data = {\n  //         uid: currentUser.uid,\n  //         flights: flightEm,\n  //         electricity: elecEm,\n  //         total: (Number(flightEm) + Number(elecEm))\n  //     };\n  //     axios.post('http://localhost:8080/monthly', data)\n  //         .then(response => console.log(response))\n  //         .catch(err => console.log('error --> ', err));\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      maxWidth: 900\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      width: '800px',\n      height: '400px',\n      chartType: \"LineChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this),\n      data: chartData,\n      options: {\n        hAxis: {\n          title: 'Day'\n        },\n        vAxis: {\n          title: 'Carbon Emission in kgs'\n        }\n      },\n      rootProps: {\n        'data-testid': '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Daily, \"0+oJMj7OYGWIZPoH473GC0VM6P4=\", false, function () {\n  return [useAuth];\n});\n\n_c = Daily;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"sources":["/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Daily.js"],"names":["React","useEffect","useState","useAuth","axios","Chart","Daily","chartData","setChartData","currentUser","uid","data","post","then","response","graphdata","console","log","i","push","date","total","catch","err","display","maxWidth","hAxis","title","vAxis"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,qBAApB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAC,CAAC,KAAD,EAAQ,wBAAR,CAAD,CAAD,CAA1C;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAkBN,OAAO,EAA/B;;AAGA,MAAIM,WAAW,IAAIA,WAAW,CAACC,GAA/B,EAAoC;AAChC,QAAIC,IAAI,GAAG;AAACD,MAAAA,GAAG,EAAED,WAAW,CAACC;AAAlB,KAAX;AACAN,IAAAA,KAAK,CAACQ,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,EACKE,IADL,CACUC,QAAQ,IAAI;AACd,UAAIC,SAAS,GAAG,EAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACH,IAArB;;AACA,WAAK,IAAIO,CAAT,IAAcJ,QAAQ,CAACH,IAAvB,EAA6B;AACzBI,QAAAA,SAAS,CAACI,IAAV,CAAe,CAACD,CAAC,CAACE,IAAH,EAASF,CAAC,CAACG,KAAX,CAAf;AACH;;AACDL,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAA,MAAAA,SAAS,CAACI,IAAV,CAAe,CAAC,CAAD,EAAG,EAAH,CAAf;AACAJ,MAAAA,SAAS,CAACI,IAAV,CAAe,CAAC,EAAD,EAAI,EAAJ,CAAf;AACAJ,MAAAA,SAAS,GAAG,CAAC,CAAC,KAAD,EAAQ,wBAAR,CAAD,IAAsCA,SAAlD;AACAP,MAAAA,YAAY,CAACO,SAAD,CAAZ;AACH,KAZL,EAaKO,KAbL,CAaWC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BM,GAA1B,CAblB;AAeH,GAxB2B,CA2B5B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA,2BAEA,QAAC,KAAD;AACA,MAAA,KAAK,EAAE,OADP;AAEA,MAAA,MAAM,EAAE,OAFR;AAGA,MAAA,SAAS,EAAC,WAHV;AAIA,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR;AAKA,MAAA,IAAI,EAAElB,SALN;AAMA,MAAA,OAAO,EAAE;AACLmB,QAAAA,KAAK,EAAE;AACPC,UAAAA,KAAK,EAAE;AADA,SADF;AAILC,QAAAA,KAAK,EAAE;AACPD,UAAAA,KAAK,EAAE;AADA;AAJF,OANT;AAcA,MAAA,SAAS,EAAE;AAAE,uBAAe;AAAjB;AAdX;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GApEuBrB,K;UAIIH,O;;;KAJJG,K;AAoEvB","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useAuth} from './../../firebase/auth';\nimport axios from 'axios';\nimport {Chart} from 'react-google-charts';\n\nexport default function Daily() {\n    \n    const [chartData, setChartData] = useState([['Day', 'Carbon emission in kgs']]);\n\n    const { currentUser } = useAuth();\n\n   \n    if (currentUser && currentUser.uid) {\n        let data = {uid: currentUser.uid};\n        axios.post('http://localhost:8080/daily', data)\n            .then(response => {\n                var graphdata = [];\n                console.log(response.data);\n                for (var i of response.data) {\n                    graphdata.push([i.date, i.total])\n                }\n                console.log(graphdata);\n                graphdata.push([1,10]);\n                graphdata.push([30,15]);\n                graphdata = [['Day', 'Carbon emission in kgs']] + graphdata;\n                setChartData(graphdata);\n            })\n            .catch(err => console.log('error --> ', err));\n        \n    }\n \n\n    // useEffect(() => {\n    //     setFlightEm(90 * flightTime);\n    // }, [flightTime]);\n\n    // useEffect(() => {\n    //     setElecEm((0.9 * electricity) / peopleCount);\n    // }, [electricity, peopleCount]);\n\n    // function saveEm() {\n    //     let data = {\n    //         uid: currentUser.uid,\n    //         flights: flightEm,\n    //         electricity: elecEm,\n    //         total: (Number(flightEm) + Number(elecEm))\n    //     };\n    //     axios.post('http://localhost:8080/monthly', data)\n    //         .then(response => console.log(response))\n    //         .catch(err => console.log('error --> ', err));\n    // }\n\n    return (\n        <div style={{ display: 'flex', maxWidth: 900 }}>\n        \n        <Chart\n        width={'800px'}\n        height={'400px'}\n        chartType=\"LineChart\"\n        loader={<div>Loading Chart</div>}\n        data={chartData}\n        options={{\n            hAxis: {\n            title: 'Day',\n            },\n            vAxis: {\n            title: 'Carbon Emission in kgs',\n            },\n        }}\n        rootProps={{ 'data-testid': '1' }}\n        />\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}