{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useAuth } from \"./../../firebase/auth\";\nimport axios from 'axios';\nimport './../../css/profile.css';\nimport { Daily } from './Daily';\nimport { Monthly } from './Monthly';\nimport { Chart } from 'react-google-charts';\nexport default function Profile() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [location, setLocation] = useState('');\n  const {\n    currentUser,\n    updateEmail,\n    updatePassword\n  } = useAuth();\n\n  if (currentUser) {\n    let uid = currentUser.uid;\n    axios.post('http://localhost:8080/user/get', {\n      uid: uid\n    }).then(response => {\n      console.log(response.data);\n      setEmail(currentUser.email);\n      setUsername(response.data.username);\n      setLocation(response.data.location);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"mainbody\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            width: '20%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Username: \", username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabs\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/user/daily\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                children: \"Daily\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/user/monthly\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                children: \"Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user/daily\",\n            component: DailyEm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user/monthly\",\n            component: MonthlyEm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              maxWidth: 900\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chart, {\n              width: 400,\n              height: 300,\n              chartType: \"ColumnChart\",\n              loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this),\n              data: [['City', '2010 Population', '2000 Population'], ['New York City, NY', 8175000, 8008000], ['Los Angeles, CA', 3792000, 3694000], ['Chicago, IL', 2695000, 2896000], ['Houston, TX', 2099000, 1953000], ['Philadelphia, PA', 1526000, 1517000]],\n              options: {\n                title: 'Population of Largest U.S. Cities',\n                chartArea: {\n                  width: '30%'\n                },\n                hAxis: {\n                  title: 'Total Population',\n                  minValue: 0\n                },\n                vAxis: {\n                  title: 'City'\n                }\n              },\n              legendToggle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Chart, {\n              width: 400,\n              height: 300,\n              chartType: \"LineChart\",\n              loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this),\n              data: [[{\n                type: 'number',\n                label: 'x'\n              }, {\n                type: 'number',\n                label: 'values'\n              }, {\n                id: 'i0',\n                type: 'number',\n                role: 'interval'\n              }, {\n                id: 'i1',\n                type: 'number',\n                role: 'interval'\n              }, {\n                id: 'i2',\n                type: 'number',\n                role: 'interval'\n              }, {\n                id: 'i2',\n                type: 'number',\n                role: 'interval'\n              }, {\n                id: 'i2',\n                type: 'number',\n                role: 'interval'\n              }, {\n                id: 'i2',\n                type: 'number',\n                role: 'interval'\n              }], [1, 100, 90, 110, 85, 96, 104, 120], [2, 120, 95, 130, 90, 113, 124, 140], [3, 130, 105, 140, 100, 117, 133, 139], [4, 90, 85, 95, 85, 88, 92, 95], [5, 70, 74, 63, 67, 69, 70, 72], [6, 30, 39, 22, 21, 28, 34, 40], [7, 80, 77, 83, 70, 77, 85, 90], [8, 100, 90, 110, 85, 95, 102, 110]],\n              options: {\n                intervals: {\n                  style: 'sticks'\n                },\n                legend: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"lTPahi5wxSuZR1ZHC6h6MPTy1aM=\", false, function () {\n  return [useAuth];\n});\n\n_c = Profile;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/tanvee/tanvee/nitp/17janv1/Decarbonate-2/src/components/user/Profile.js"],"names":["React","useState","useEffect","Link","BrowserRouter","Router","Route","useAuth","axios","Daily","Monthly","Chart","Profile","email","setEmail","username","setUsername","location","setLocation","currentUser","updateEmail","updatePassword","uid","post","then","response","console","log","data","catch","err","width","DailyEm","MonthlyEm","display","maxWidth","title","chartArea","hAxis","minValue","vAxis","type","label","id","role","intervals","style","legend"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link, BrowserRouter as Router, Route} from 'react-router-dom';\nimport { useAuth } from \"./../../firebase/auth\";\nimport axios from 'axios';\nimport './../../css/profile.css'\nimport {Daily} from './Daily';\nimport {Monthly} from './Monthly';\nimport {Chart} from 'react-google-charts';\n\nexport default function Profile() {   \n\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n    const [location, setLocation] = useState('');\n    \n    const { currentUser, updateEmail, updatePassword } = useAuth(); \n    \n    if (currentUser) {\n        let uid = currentUser.uid;\n        axios.post('http://localhost:8080/user/get', {uid: uid})\n            .then(response => {\n                console.log(response.data);\n                setEmail(currentUser.email);\n                setUsername(response.data.username);\n                setLocation(response.data.location);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    return (\n        <table className='mainbody'>\n            <tbody>\n                <tr>\n                    <td style={{width:'20%'}}>\n                        <div>\n                            <h1>Profile</h1>\n                            <p>Email: {email}</p>\n                            <p>Username: {username}</p>\n                            <p>Location: {location}</p>\n                        </div>\n                    </td>\n                    <td>\n                        <div className='tabs'>\n                            <Link to='/user/daily'><button className='button'>Daily</button></Link>\n                            <Link to='/user/monthly'><button className='button'>Monthly</button></Link>\n                        </div>\n\n                        <Route path='/user/daily' component={DailyEm} />\n                        <Route path='/user/monthly' component={MonthlyEm} />\n                    <div style={{ display: 'flex', maxWidth: 900 }}>\n                        <Chart\n                            width={400}\n                            height={300}\n                            chartType=\"ColumnChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                            ['City', '2010 Population', '2000 Population'],\n                            ['New York City, NY', 8175000, 8008000],\n                            ['Los Angeles, CA', 3792000, 3694000],\n                            ['Chicago, IL', 2695000, 2896000],\n                            ['Houston, TX', 2099000, 1953000],\n                            ['Philadelphia, PA', 1526000, 1517000],\n                            ]}\n                            options={{\n                            title: 'Population of Largest U.S. Cities',\n                            chartArea: { width: '30%' },\n                            hAxis: {\n                                title: 'Total Population',\n                                minValue: 0,\n                            },\n                            vAxis: {\n                                title: 'City',\n                            },\n                            }}\n                            legendToggle\n                        />\n                        \n                        <Chart\n                            width={400}\n                            height={300}\n                            chartType=\"LineChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                            [\n                                { type: 'number', label: 'x' },\n                                { type: 'number', label: 'values' },\n                                { id: 'i0', type: 'number', role: 'interval' },\n                                { id: 'i1', type: 'number', role: 'interval' },\n                                { id: 'i2', type: 'number', role: 'interval' },\n                                { id: 'i2', type: 'number', role: 'interval' },\n                                { id: 'i2', type: 'number', role: 'interval' },\n                                { id: 'i2', type: 'number', role: 'interval' },\n                            ],\n                            [1, 100, 90, 110, 85, 96, 104, 120],\n                            [2, 120, 95, 130, 90, 113, 124, 140],\n                            [3, 130, 105, 140, 100, 117, 133, 139],\n                            [4, 90, 85, 95, 85, 88, 92, 95],\n                            [5, 70, 74, 63, 67, 69, 70, 72],\n                            [6, 30, 39, 22, 21, 28, 34, 40],\n                            [7, 80, 77, 83, 70, 77, 85, 90],\n                            [8, 100, 90, 110, 85, 95, 102, 110],\n                            ]}\n                            options={{\n                            intervals: { style: 'sticks' },\n                            legend: 'none',\n                            }}\n                        />\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n};"]},"metadata":{},"sourceType":"module"}